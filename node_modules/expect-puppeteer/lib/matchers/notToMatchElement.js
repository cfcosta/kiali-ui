'use strict';

exports.__esModule = true;

var _utils = require('../utils');

var _options = require('../options');

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

async function notToMatchElement(instance, selector, _ref = {}) {
  let { text } = _ref,
      options = _objectWithoutProperties(_ref, ['text']);

  options = (0, _options.defaultOptions)(options);

  const { page, handle } = await (0, _utils.getContext)(instance, () => document);

  try {
    await page.waitForFunction((handle, selector, text) => {
      const elements = handle.querySelectorAll(selector);
      if (text !== undefined) {
        return [...elements].every(({ textContent }) => !textContent.match(text));
      }

      return elements.length === 0;
    }, options, handle, selector, text);
  } catch (error) {
    throw (0, _utils.enhanceError)(error, `Element ${selector}${text !== undefined ? ` (text: "${text}") ` : ' '}found`);
  }
}

exports.default = notToMatchElement;