'use strict';

var _util = require('util');

var _child_process = require('child_process');

var _terminate = require('terminate');

var _terminate2 = _interopRequireDefault(_terminate);

var _exit = require('exit');

var _exit2 = _interopRequireDefault(_exit);

var _signalExit = require('signal-exit');

var _signalExit2 = _interopRequireDefault(_signalExit);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const pterminate = (0, _util.promisify)(_terminate2.default);

function spawnd(command, options) {
  function cleanExit(code = 1) {
    if (proc && proc.pid) {
      (0, _terminate2.default)(proc.pid, () => (0, _exit2.default)(code));
    } else {
      (0, _exit2.default)(code);
    }
  }

  const proc = (0, _child_process.spawn)(command, options);
  proc.stderr.pipe(process.stderr);
  proc.on('exit', cleanExit);
  proc.on('error', () => cleanExit(1));

  const removeExitHandler = (0, _signalExit2.default)(code => {
    cleanExit(typeof code === 'number' ? code : 1);
  });

  proc.destroy = async () => {
    removeExitHandler();
    proc.removeAllListeners('exit');
    proc.removeAllListeners('error');
    return pterminate(proc.pid).catch(() => {
      /* ignore error */
    });
  };

  return proc;
}

module.exports = spawnd;